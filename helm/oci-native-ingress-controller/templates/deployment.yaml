#
# OCI Native Ingress Controller
#
# Copyright (c) 2023 Oracle America, Inc. and its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl/
#
{{- if not (lookup "v1" "Namespace" "" .Values.deploymentNamespace)}}
apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.deploymentNamespace }}
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "oci-native-ingress-controller.fullname" . }}
  namespace: {{ .Values.deploymentNamespace }}
  labels:
    {{- include "oci-native-ingress-controller.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "oci-native-ingress-controller.selectorLabels" . | nindent 6 }}
  {{- with .Values.updateStrategy }}
  strategy:
    {{ toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "oci-native-ingress-controller.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "oci-native-ingress-controller.serviceAccountName" . }}
      automountServiceAccountToken: true
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: {{ template "oci-native-ingress-controller.webhookCertSecret" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: 
          - --lease-lock-name={{ .Values.lease_lock_name }}
          - --lease-lock-namespace={{ .Values.deploymentNamespace }}
          - --authType={{ .Values.authType}}
          - --auth-secret-name={{ .Values.authSecretName}}
          - --controller-class={{ .Values.controller_class }}
          - --compartment-id={{ .Values.compartment_id }}
          - --subnet-id={{ .Values.subnet_id }}
          - --cluster-id={{.Values.cluster_id }}
          - --metrics-backend={{.Values.metrics.backend}}
          - --metrics-port={{.Values.metrics.port}}
          - --v=4
          env:
            - name: OCI_RESOURCE_PRINCIPAL_VERSION
              value: "2.2"
            - name: OCI_RESOURCE_PRINCIPAL_REGION
              value: {{ .Values.region }}
            - name: OCI_SDK_DEFAULT_RETRY_ENABLED
              value: "true"
            - name: OCI_REGION_METADATA
              value: {{ squote .Values.ociRegionMetadataEnvString }}
          ports:
            - name: webhook-server
              containerPort: {{.Values.webhookBindPort}}
              protocol: TCP
            - name: metrics-server
              containerPort: 2223
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: cert
            readOnly: true
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
